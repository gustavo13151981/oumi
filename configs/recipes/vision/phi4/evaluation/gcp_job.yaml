# Job config to eval Phi4 multimodal 5.6B on GPC.
#
# Requirements:
#   - Set up SkyPilot GCP: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#setup
#   - Log into WandB (`wandb login`) or disable `enable_wandb`
#
# Usage:
#   oumi launch up --config configs/recipes/vision/phi4/evaluation/gcp_job.yaml --cluster phi4-multimodal

name: phi4-mm-eval

resources:
  cloud: gcp
  accelerators: "A100:1" # Feel free to bump up the number of GPUs!
  use_spot: false
  disk_size: 1000 # Disk size in GBs

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc  # WandB credentials
  ~/.cache/huggingface/token: ~/.cache/huggingface/token # HF credentials

envs:
  # NOTE: For SFT, update this to point to your model checkpoint.
  # NOTE: For LoRA, instead update this to point to your LoRA adapter.
  #       The base model will be inferred automatically.
  MODEL_CHECKPOINT_DIR: microsoft/Phi-4-multimodal-instruct
  WANDB_PROJECT: oumi-eval
  OUMI_RUN_NAME: phi4.mm.eval

setup: |
  set -e
  # pip install uv && uv pip install oumi[gpu] hf_transfer
  pip install uv && uv pip install ".[gpu]" hf_transfer

  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during eval.
  HF_HUB_ENABLE_HF_TRANSFER=1 huggingface-cli download microsoft/Phi-4-multimodal-instruct

  # The model requires flash_attention_2! Install it here.
  pip install -U flash-attn --no-build-isolation

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  if test ${OUMI_NUM_NODES} -ne 1; then
    echo "LM Harness supports max 1 node. Actual: ${OUMI_NUM_NODES} nodes."
    exit 1
  fi

  # pip install -U flash-attn --no-build-isolation

  echo "Starting evaluation for ${MODEL_CHECKPOINT_DIR} ..."

  set -x
  oumi distributed accelerate launch \
    --mixed_precision="no" \
    --dynamo_backend="no" \
    -m oumi evaluate \
    -c configs/recipes/vision/phi4/evaluation/eval.yaml \
    --run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
    --model.model_name "${MODEL_CHECKPOINT_DIR}"

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
